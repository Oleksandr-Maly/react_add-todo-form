{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","utiles/getUserById.ts","App.tsx","api/todos.ts","utiles/getNewId.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUserbyId","users","userId","find","prepearedTodos","usersFromServer","App","useState","setTitle","setUserId","setTodos","titleSetted","setTitleSetted","userNameSetted","setUserNameSetted","addingNewTodo","newToDoId","items","Math","max","newTodoUSer","newTodo","prevTodos","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13fca517.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = { user: User };\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo subtitle is-6\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = { todo: Todo };\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        'is-light',\n        'notification',\n        {\n          'is-info': completed,\n          'is-warning': !completed,\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title title is-6\">\n        {title}\n      </h2>\n      {user && (<UserInfo user={user} />)}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import { User } from '../types/User';\n\nexport const getUserbyId = (users: User[], userId:number):User | null => {\n  return users.find(user => user.id === userId) || null;\n};\n","import React, { FormEvent, ChangeEvent, useState } from 'react';\nimport './App.scss';\nimport 'bulma/css/bulma.min.css';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { getNewId } from './utiles/getNewId';\nimport { getUserbyId } from './utiles/getUserById';\n\nconst prepearedTodos:Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserbyId(usersFromServer, todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>(prepearedTodos);\n  const [titleSetted, setTitleSetted] = useState(true);\n  const [userNameSetted, setUserNameSetted] = useState(true);\n\n  const addingNewTodo = () => {\n    if (!title) {\n      setTitleSetted(false);\n    }\n\n    if (!userId) {\n      setUserNameSetted(false);\n    }\n\n    if (title && userId) {\n      const newToDoId = getNewId(todos);\n      const newTodoUSer = getUserbyId(usersFromServer, userId);\n      const newTodo: Todo = {\n        id: newToDoId,\n        title,\n        completed: false,\n        userId,\n        user: newTodoUSer,\n      };\n\n      setTodos((prevTodos:Todo[]) => ([\n        ...prevTodos,\n        newTodo,\n      ]));\n\n      setUserId(0);\n      setTitle('');\n    }\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    addingNewTodo();\n  };\n\n  const handleImput = (event:ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleSetted(true);\n  };\n\n  const handleSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserNameSetted(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title is-1\">Add todo form</h1>\n      <div className=\"box\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"field container\">\n            <input\n              className=\"inputRestyle\"\n              type=\"text \"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter tittle\"\n              value={title}\n              onChange={handleImput}\n            />\n\n            {\n              !titleSetted\n            && (\n              <span className=\"error\">\n                Please enter a title\n              </span>\n            )\n            }\n          </div>\n\n          <div className=\"field container\">\n            <select\n              className=\"select inputRestyle\"\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleSelect}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n            {\n              !userNameSetted\n            && (\n              <span className=\"error\">\n                Please choose a user\n              </span>\n            )\n            }\n\n          </div>\n\n          <button\n            className=\"button is-dark is-rounded\"\n            type=\"submit\"\n            data-cy=\"submitButton\"\n          >\n            Add\n          </button>\n        </form>\n      </div>\n\n      <TodoList todos={todos} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { Todo } from '../types/Todo';\n\nexport const getNewId = (items:Todo[]):number => {\n  const maxId = Math.max(...items.map(todo => todo.id));\n\n  return maxId + 1;\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}