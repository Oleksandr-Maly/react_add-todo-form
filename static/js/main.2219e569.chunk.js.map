{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","utiles/Todo.tsx","utiles/getUserById.ts","App.tsx","api/todos.ts","utiles/getNewId.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","Todo","userId","getUserbyId","users","find","prepearedTodos","usersFromServer","App","useState","setTitle","setUserId","setTodos","titleSetted","setTitleSetted","userNameSetted","setUserNameSetted","addingNewTodo","newToDoId","items","Math","max","newTodoUSer","newTodo","prevTodos","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"6MAAe,G,MAAA,CACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,4B,wBCtDEC,EAA4B,SAAH,GAAkB,IAAZC,EAAI,EAAJA,KAClCJ,EAAgBI,EAAhBJ,KAAME,EAAUE,EAAVF,MAEd,OACE,mBAAGG,UAAU,WAAWC,KAAI,iBAAYJ,GAAQ,SAC7CF,GAGP,ECNaO,EAA2B,SAAH,GAAkB,IAAZC,EAAI,EAAJA,KAEvCT,EAIES,EAJFT,GACAU,EAGED,EAHFC,MACAC,EAEEF,EAFFE,UACAN,EACEI,EADFJ,KAGF,OACE,0BACE,UAASL,EACTM,UAAWM,IACT,WACA,CACE,sBAAuBD,IAEzB,UAEF,oBAAIL,UAAU,kBAAiB,SAC5BI,IAEFL,GAAS,cAAC,EAAQ,CAACA,KAAMA,MAGhC,ECvBaQ,EAA4B,SAAH,GAAmB,IAAbC,EAAK,EAALA,MAC1C,OACE,yBAASR,UAAU,WAAU,SAC1BQ,EAAMC,KAAI,SAAAN,GAAI,OACb,cAAC,EAAQ,CAACA,KAAMA,GAAWA,EAAKT,GAAM,KAI9C,E,gBCdagB,EAAI,aAGf,WACShB,EACAU,EACAO,EACAZ,GACN,yBAJML,KAAU,KACVU,QAAa,KACbO,SAAc,KACdZ,OAAiB,KAN1BM,WAAY,CAOT,ICRQO,EAAc,SAACC,EAAeF,GACzC,OAAOE,EAAMC,MAAK,SAAAf,GAAI,OAAIA,EAAKL,KAAOiB,CAAM,KAAK,IACnD,ECMMI,ECVS,CACb,CACErB,GAAI,EACJU,MAAO,qBACPC,WAAW,EACXM,OAAQ,GAEV,CACEjB,GAAI,GACJU,MAAO,kBACPC,WAAW,EACXM,OAAQ,GAEV,CACEjB,GAAI,EACJU,MAAO,qCACPC,WAAW,EACXM,OAAQ,IDPkCF,KAAI,SAAAN,GAAI,kCACjDA,GAAI,IACPJ,KAAMa,EAAYI,EAAiBb,EAAKQ,SAAO,IAGpCM,EAAM,WACjB,MAA0BC,mBAAS,IAAG,mBAA/Bd,EAAK,KAAEe,EAAQ,KACtB,EAA4BD,mBAAS,GAAE,mBAAhCP,EAAM,KAAES,EAAS,KACxB,EAA0BF,mBAASH,GAAe,mBAA3CP,EAAK,KAAEa,EAAQ,KACtB,EAAsCH,oBAAS,GAAK,mBAA7CI,EAAW,KAAEC,EAAc,KAClC,EAA4CL,oBAAS,GAAK,mBAAnDM,EAAc,KAAEC,EAAiB,KAElCC,EAAgB,WASpB,GARKtB,GACHmB,GAAe,GAGZZ,GACHc,GAAkB,GAGhBrB,GAASO,EAAQ,CACnB,IAAMgB,GE9BaC,EF8BQpB,EE7BjBqB,KAAKC,IAAG,MAARD,KAAI,YAAQD,EAAMnB,KAAI,SAAAN,GAAI,OAAIA,EAAKT,EAAE,MAEpC,GF4BLqC,EAAcnB,EAAYI,EAAiBL,GAC3CqB,EAAU,IAAItB,EAAKiB,EAAWvB,EAAOO,EAAQoB,GAEnDV,GAAS,SAACY,GAAS,4BACdA,GAAS,CACZD,GAAO,IAGTZ,EAAU,GACVD,EAAS,GACX,CEzCoB,IAACS,CF0CvB,EAiBA,OACE,sBAAK5B,UAAU,MAAK,UAClB,6BAAI,kBAEJ,uBAAMkC,SAnBW,SAACC,GACpBA,EAAMC,iBACNV,GACF,EAgBiC,UAC3B,sBAAK1B,UAAU,QAAO,UACpB,uBACEqC,KAAK,OACL,UAAQ,aACRC,YAAY,eACZC,MAAOnC,EACPoC,SArBU,SAACL,GACnBhB,EAASgB,EAAMM,OAAOF,OACtBhB,GAAe,EACjB,KAsBWD,GAEC,sBAAMtB,UAAU,QAAO,SAAC,4BAO9B,sBAAKA,UAAU,QAAO,UAEpB,yBACE,UAAQ,aACRuC,MAAO5B,EACP6B,SAlCW,SAACL,GACpBf,GAAWe,EAAMM,OAAOF,OACxBd,GAAkB,EACpB,EA+BiC,UAEvB,wBAAQc,MAAM,IAAIG,UAAQ,WAAC,kBAC1B1B,EAAgBP,KAAI,SAAAV,GAAI,OACvB,wBAAQwC,MAAOxC,EAAKL,GAAG,SACpBK,EAAKJ,MADqBI,EAAKL,GAEzB,QAIV8B,GAEC,sBAAMxB,UAAU,QAAO,SAAC,4BAQ9B,wBAAQqC,KAAK,SAAS,UAAQ,eAAc,SAAC,WAK/C,cAAC,EAAQ,CAAC7B,MAAOA,MAIvB,EGpHAmC,IAASC,OAAO,cAAC,EAAG,IAAKC,SAASC,eAAe,Q","file":"static/js/main.2219e569.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = { user: User };\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../utiles/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = { todo: Todo };\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && (<UserInfo user={user} />)}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../utiles/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import { User } from '../types/User';\n\nexport class Todo {\n  completed = false;\n\n  constructor(\n    public id: number,\n    public title: string,\n    public userId: number,\n    public user: User | null,\n  ) {}\n}\n","import { User } from '../types/User';\n\nexport const getUserbyId = (users: User[], userId:number):User | null => {\n  return users.find(user => user.id === userId) || null;\n};\n","import { FormEvent, ChangeEvent, useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './utiles/Todo';\nimport { getNewId } from './utiles/getNewId';\nimport { getUserbyId } from './utiles/getUserById';\n\nconst prepearedTodos:Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserbyId(usersFromServer, todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todos, setTodos] = useState(prepearedTodos);\n  const [titleSetted, setTitleSetted] = useState(true);\n  const [userNameSetted, setUserNameSetted] = useState(true);\n\n  const addingNewTodo = () => {\n    if (!title) {\n      setTitleSetted(false);\n    }\n\n    if (!userId) {\n      setUserNameSetted(false);\n    }\n\n    if (title && userId) {\n      const newToDoId = getNewId(todos);\n      const newTodoUSer = getUserbyId(usersFromServer, userId);\n      const newTodo = new Todo(newToDoId, title, userId, newTodoUSer);\n\n      setTodos((prevTodos) => ([\n        ...prevTodos,\n        newTodo,\n      ]));\n\n      setUserId(0);\n      setTitle('');\n    }\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    addingNewTodo();\n  };\n\n  const handleImput = (event:ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleSetted(true);\n  };\n\n  const handleSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserNameSetted(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter tittle\"\n            value={title}\n            onChange={handleImput}\n          />\n\n          {\n            !titleSetted\n            && (\n              <span className=\"error\">\n                Please enter a title\n              </span>\n            )\n          }\n        </div>\n\n        <div className=\"field\">\n\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleSelect}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {\n            !userNameSetted\n            && (\n              <span className=\"error\">\n                Please choose a user\n              </span>\n            )\n          }\n\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { Todo } from './Todo';\n\nexport const getNewId = (items:Todo[]):number => {\n  const maxId = Math.max(...items.map(todo => todo.id));\n\n  return maxId + 1;\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}